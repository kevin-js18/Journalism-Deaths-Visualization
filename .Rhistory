which(PIE_rating == 2)
which(PIE_rating == -2.000)
player_ids[214]
nba_salaries$Rank[214]
path <- file.path("C:/Users/aet/Desktop/School/R projects/NBA Salary/nba_salary.txt")
nba_url <- "http://stats.nba.com/stats/commonallplayers?IsOnlyCurrentSeason=1&LeagueID=00&Season=2016-17"
nba_salaries <- read.table(path, sep = ",", skip = 1, stringsAsFactors = FALSE)
all_nba_data <- fromJSON(nba_url)
nba_df <- data.frame(all_nba_data$resultSets$rowSet, stringsAsFactors = FALSE)
nba_df <- nba_df[ , -2]
nba_df <- nba_df[ , -(3:12)]
nba_salaries$V2 <- sapply(strsplit(nba_salaries$V2, "\\\\"), "[", 1)
nba_salaries <- nba_salaries[ , -(5:11)]
names(nba_salaries) <- c("Rank", "Player", "Team", "16-17 Salary")
names(nba_df) <- c("ID", "Name")
nba_salaries$`16-17 Salary` <- sub("^\\$([0-9]+)", "\\1",nba_salaries$`16-17 Salary`)
nba_salaries$`16-17 Salary` <- sapply(nba_salaries$`16-17 Salary`, function(x) { as.numeric(x) / 1000000 })
player_ids <- c()
PIE_rating <- c()
for (i in 1:length(nba_salaries$Player)) {
if (length(grep(nba_salaries$Player[i], nba_df$Name)) == 0) {
player_ids[i] <- NA
}
else {
player_ids[i] <- nba_df[grep(nba_salaries$Player[i], nba_df$Name), 1]
}
}
for (i in 1:length(player_ids)) {
if (is.na(player_ids[i])) {
PIE_rating[i] <- NA
}
else {
player_url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=", player_ids[i],"&SeasonType=Regular+Season", sep = "")
player_data <- fromJSON(player_url)
if (length(player_data$resultSets$rowSet[[2]]) == 0) {
PIE_rating[i] <- NA
}
else {
player_df <- data.frame(player_data$resultSets$rowSet, stringsAsFactors = FALSE)
PIE_rating[i] <- player_df$X7.1
}
}
}
PIE_rating <- as.numeric(PIE_rating)
final_df <- data.frame(nba_salaries, PIE_rating)
non_na_index <- which(!is.na(PIE_rating))
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index])
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index], xlab = "Player Impact Estimate", ylab = "Salary (in millions)", main = "Player Salary vs. Player Impact Estimate in the NBA")
mtext("2016 - 2017 Regular Season, as of 11/05/2016")
install.packages("ggvis")
library(ggvis)
final_df %>%
group_by(Team) %>%
ggvis(~X16.17.Salary) %>%
layer_boxplots()
final_df %>%
group_by(Team) %>%
ggvis(y = ~X16.17.Salary, x = 1) %>%
layer_boxplots()
final_df %>%
group_by(Team) %>%
ggvis(y = ~X16.17.Salary, x = ~1) %>%
layer_boxplots()
group_by(Team)
final_df %>%
group_by(Team)
head(final_df)
final_df %>%
group_by(Team) %>%
ggvis(~X16.17.Salary, ~Team) %>%
layer_boxplots()
some_df <- final_df %>%
group_by(Team)
head(some_df)
head(mtcars)
mtcars %>%
group_by(cyl)
group_by(mtcars, cyl)
head(htflights)
head(hflights)
library("dplyr", lib.loc="~/R/win-library/3.3")
final_df %>%
group_by(Team)
final_df
group_by(final_df, Team)
?group_by
final_tbl <- as.tbl(final_df)
group_by(final_tbl, Team)
order_by(final_df, Team)
?order_by
library("ggvis", lib.loc="~/R/win-library/3.3")
library("jsonlite", lib.loc="~/R/win-library/3.3")
library("httr", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
library("dplyr", lib.loc="~/R/win-library/3.3")
path <- file.path("C:/Users/aet/Desktop/School/R projects/NBA Salary/nba_salary.txt")
nba_url <- "http://stats.nba.com/stats/commonallplayers?IsOnlyCurrentSeason=1&LeagueID=00&Season=2016-17"
nba_salaries <- read.table(path, sep = ",", skip = 1, stringsAsFactors = FALSE)
all_nba_data <- fromJSON(nba_url)
nba_df <- data.frame(all_nba_data$resultSets$rowSet, stringsAsFactors = FALSE)
nba_df <- nba_df[ , -2]
nba_df <- nba_df[ , -(3:12)]
nba_salaries$V2 <- sapply(strsplit(nba_salaries$V2, "\\\\"), "[", 1)
nba_salaries <- nba_salaries[ , -(5:11)]
names(nba_salaries) <- c("Rank", "Player", "Team", "16-17 Salary")
names(nba_df) <- c("ID", "Name")
nba_salaries$`16-17 Salary` <- sub("^\\$([0-9]+)", "\\1",nba_salaries$`16-17 Salary`)
nba_salaries$`16-17 Salary` <- sapply(nba_salaries$`16-17 Salary`, function(x) { as.numeric(x) / 1000000 })
player_ids <- c()
PIE_rating <- c()
for (i in 1:length(nba_salaries$Player)) {
if (length(grep(nba_salaries$Player[i], nba_df$Name)) == 0) {
player_ids[i] <- NA
}
else {
player_ids[i] <- nba_df[grep(nba_salaries$Player[i], nba_df$Name), 1]
}
}
for (i in 1:length(player_ids)) {
if (is.na(player_ids[i])) {
PIE_rating[i] <- NA
}
else {
player_url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=", player_ids[i],"&SeasonType=Regular+Season", sep = "")
player_data <- fromJSON(player_url)
if (length(player_data$resultSets$rowSet[[2]]) == 0) {
PIE_rating[i] <- NA
}
else {
player_df <- data.frame(player_data$resultSets$rowSet, stringsAsFactors = FALSE)
PIE_rating[i] <- player_df$X7.1
}
}
}
PIE_rating <- as.numeric(PIE_rating)
final_df <- data.frame(nba_salaries, PIE_rating)
non_na_index <- which(!is.na(PIE_rating))
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index], xlab = "Player Impact Estimate", ylab = "Salary (in millions)", main = "Player Salary vs. Player Impact Estimate in the NBA")
mtext("2016 - 2017 Regular Season, as of 11/05/2016")
final_df %>%
ggvis(~PIE_rating, ~X16.17.Salary, fill = Team) %>%
layer_points()
final_df %>%
ggvis(~PIE_rating, ~X16.17.Salary, fill = ~Team) %>%
layer_points()
group_by(final_df, Team)
final_df %>%
group_by(Team) %>%
summarise(players = n())
final_df %>%
group_by(Team) %>%
ggvis(~PIE_rating, ~X16.17.Salary) %>%
layer_points()
final_df %>%
+ group_by(Team) %>%
+ ggvis(~PIE_rating, ~X16.17.Salary) %>%
+ layer_points()
subset(final_df, final_df$Team == "ATL")
bkn_df <- subset(final_df, final_df$Team = "BKN")
bkn_df <- subset(final_df, final_df$Team == "BKN")
bkn_df %>%
ggvis(~X16.17.Salary, ~1) %>%
layer_boxplots()
bkn_df
finals_df$Team
final_df$Team
bkn_df <- subset(final_df, final_df$Team == "BKN")bkn_df %>%
ggvis(~X16.17.Salary, ~1) %>%
+ layer_boxplots()
brk_df <- subset(final_df, final_df$Team == "BRK")
brk_df %>%
ggvis(~X16.17.Salary, ~1) %>%
layer_boxplots()
brk_df %>%
ggvis(y=~X16.17.Salary, x=~1) %>%
layer_boxplots()
boxplot(brk_df$X16.17.Salary)
?boxplot
?boxplot
boxplot(brk_df$X16.17.Salary, range = 0)
boxplot(brk_df$X16.17.Salary, outline = FALSE)
group_by(factor(Team)) %>%
final_df %>%
group_by(factor(Team)) %>%
ggvis(~X16.17.Salary, ~factor(Team)) %>%
layer_boxplots()
library("ggvis", lib.loc="~/R/win-library/3.3")
library("dplyr", lib.loc="~/R/win-library/3.3")
library("jsonlite", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
path <- file.path("C:/Users/aet/Desktop/School/R projects/NBA Salary/nba_salary.txt")
nba_url <- "http://stats.nba.com/stats/commonallplayers?IsOnlyCurrentSeason=1&LeagueID=00&Season=2016-17"
nba_salaries <- read.table(path, sep = ",", skip = 1, stringsAsFactors = FALSE)
all_nba_data <- fromJSON(nba_url)
nba_df <- data.frame(all_nba_data$resultSets$rowSet, stringsAsFactors = FALSE)
nba_df <- nba_df[ , -2]
nba_df <- nba_df[ , -(3:12)]
nba_salaries$V2 <- sapply(strsplit(nba_salaries$V2, "\\\\"), "[", 1)
nba_salaries <- nba_salaries[ , -(5:11)]
names(nba_salaries) <- c("Rank", "Player", "Team", "16-17 Salary")
names(nba_df) <- c("ID", "Name")
nba_salaries$`16-17 Salary` <- sub("^\\$([0-9]+)", "\\1",nba_salaries$`16-17 Salary`)
nba_salaries$`16-17 Salary` <- sapply(nba_salaries$`16-17 Salary`, function(x) { as.numeric(x) / 1000000 })
player_ids <- c()
PIE_rating <- c()
for (i in 1:length(nba_salaries$Player)) {
if (length(grep(nba_salaries$Player[i], nba_df$Name)) == 0) {
player_ids[i] <- NA
}
else {
player_ids[i] <- nba_df[grep(nba_salaries$Player[i], nba_df$Name), 1]
}
}
for (i in 1:length(player_ids)) {
if (is.na(player_ids[i])) {
PIE_rating[i] <- NA
}
else {
player_url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=", player_ids[i],"&SeasonType=Regular+Season", sep = "")
player_data <- fromJSON(player_url)
if (length(player_data$resultSets$rowSet[[2]]) == 0) {
PIE_rating[i] <- NA
}
else {
player_df <- data.frame(player_data$resultSets$rowSet, stringsAsFactors = FALSE)
PIE_rating[i] <- player_df$X7.1
}
}
}
PIE_rating <- as.numeric(PIE_rating)
final_df <- data.frame(nba_salaries, PIE_rating)
non_na_index <- which(!is.na(PIE_rating))
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index], xlab = "Player Impact Estimate", ylab = "Salary (in millions)", main = "Player Salary vs. Player Impact Estimate in the NBA")
mtext("2016 - 2017 Regular Season, as of 11/05/2016")
final_df %>%
group_by(factor(Team)) %>%
ggvis(~X16.17.Salary, ~factor(Team)) %>%
layer_boxplots()
library("dplyr", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
library("jsonlite", lib.loc="~/R/win-library/3.3")
install.packages(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("dplyr", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
library("jsonlite", lib.loc="~/R/win-library/3.3")
path <- file.path("C:/Users/aet/Desktop/School/R projects/NBA Salary/nba_salary.txt")
nba_url <- "http://stats.nba.com/stats/commonallplayers?IsOnlyCurrentSeason=1&LeagueID=00&Season=2016-17"
nba_salaries <- read.table(path, sep = ",", skip = 1, stringsAsFactors = FALSE)
all_nba_data <- fromJSON(nba_url)
nba_df <- data.frame(all_nba_data$resultSets$rowSet, stringsAsFactors = FALSE)
nba_df <- nba_df[ , -2]
nba_df <- nba_df[ , -(3:12)]
nba_salaries$V2 <- sapply(strsplit(nba_salaries$V2, "\\\\"), "[", 1)
nba_salaries <- nba_salaries[ , -(5:11)]
names(nba_salaries) <- c("Rank", "Player", "Team", "16-17 Salary")
names(nba_df) <- c("ID", "Name")
nba_salaries$`16-17 Salary` <- sub("^\\$([0-9]+)", "\\1",nba_salaries$`16-17 Salary`)
nba_salaries$`16-17 Salary` <- sapply(nba_salaries$`16-17 Salary`, function(x) { as.numeric(x) / 1000000 })
player_ids <- c()
PIE_rating <- c()
for (i in 1:length(nba_salaries$Player)) {
if (length(grep(nba_salaries$Player[i], nba_df$Name)) == 0) {
player_ids[i] <- NA
}
else {
player_ids[i] <- nba_df[grep(nba_salaries$Player[i], nba_df$Name), 1]
}
}
for (i in 1:length(player_ids)) {
if (is.na(player_ids[i])) {
PIE_rating[i] <- NA
}
else {
player_url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=", player_ids[i],"&SeasonType=Regular+Season", sep = "")
player_data <- fromJSON(player_url)
if (length(player_data$resultSets$rowSet[[2]]) == 0) {
PIE_rating[i] <- NA
}
else {
player_df <- data.frame(player_data$resultSets$rowSet, stringsAsFactors = FALSE)
PIE_rating[i] <- player_df$X7.1
}
}
}
PIE_rating <- as.numeric(PIE_rating)
final_df <- data.frame(nba_salaries, PIE_rating)
non_na_index <- which(!is.na(PIE_rating))
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index], xlab = "Player Impact Estimate", ylab = "Salary (in millions)", main = "Player Salary vs. Player Impact Estimate in the NBA")
mtext("2016 - 2017 Regular Season, as of 11/05/2016")
ggplot(final_df, aes(y = X16.17.Salary, x = 1)) +
geom_boxplot() +
facet(. ~ Team)
ggplot(final_df, aes(y = X16.17.Salary, x = 1)) +
geom_boxplot() +
facet(~Team)
path <- file.path("C:/Users/aet/Desktop/School/R projects/NBA Salary/nba_salary.txt")
nba_url <- "http://stats.nba.com/stats/commonallplayers?IsOnlyCurrentSeason=1&LeagueID=00&Season=2016-17"
nba_salaries <- read.table(path, sep = ",", skip = 1, stringsAsFactors = FALSE)
all_nba_data <- fromJSON(nba_url)
nba_df <- data.frame(all_nba_data$resultSets$rowSet, stringsAsFactors = FALSE)
nba_df <- nba_df[ , -2]
nba_df <- nba_df[ , -(3:12)]
nba_salaries$V2 <- sapply(strsplit(nba_salaries$V2, "\\\\"), "[", 1)
nba_salaries <- nba_salaries[ , -(5:11)]
names(nba_salaries) <- c("Rank", "Player", "Team", "16-17 Salary")
names(nba_df) <- c("ID", "Name")
nba_salaries$`16-17 Salary` <- sub("^\\$([0-9]+)", "\\1",nba_salaries$`16-17 Salary`)
nba_salaries$`16-17 Salary` <- sapply(nba_salaries$`16-17 Salary`, function(x) { as.numeric(x) / 1000000 })
player_ids <- c()
PIE_rating <- c()
for (i in 1:length(nba_salaries$Player)) {
if (length(grep(nba_salaries$Player[i], nba_df$Name)) == 0) {
player_ids[i] <- NA
}
else {
player_ids[i] <- nba_df[grep(nba_salaries$Player[i], nba_df$Name), 1]
}
}
for (i in 1:length(player_ids)) {
if (is.na(player_ids[i])) {
PIE_rating[i] <- NA
}
else {
player_url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=", player_ids[i],"&SeasonType=Regular+Season", sep = "")
player_data <- fromJSON(player_url)
if (length(player_data$resultSets$rowSet[[2]]) == 0) {
PIE_rating[i] <- NA
}
else {
player_df <- data.frame(player_data$resultSets$rowSet, stringsAsFactors = FALSE)
PIE_rating[i] <- player_df$X7.1
}
}
}
PIE_rating <- as.numeric(PIE_rating)
final_df <- data.frame(nba_salaries, PIE_rating)
non_na_index <- which(!is.na(PIE_rating))
plot(final_df$PIE_rating[non_na_index], final_df$X16.17.Salary[non_na_index], xlab = "Player Impact Estimate", ylab = "Salary (in millions)", main = "Player Salary vs. Player Impact Estimate in the NBA")
mtext("2016 - 2017 Regular Season, as of 11/05/2016")
ggplot(final_df, aes(y = X16.17.Salary, x = factor(Team))) +
geom_boxplot()
subset(final_df, final_df$Team = "MIL")
mil_df <- subset(final_df, final_df$Team == "MIL")
mean(mil_df$X16.17.Salary)
summary(mil_df)
ggplot(final_df, aes(y = X16.17.Salary, x = factor(Team))) +
geom_boxplot() +
labs(x = "Team", y = "Salary (in millions)") +
ggtitle("2016-2017 Salary ranges for NBA teams") +
theme(plot.title = element_text(family = "Montserrat", color = "#3e4551")) +
theme(axis.title = element_text(family = "Montserrat", color = "#3e4551"))
install.packages("readr")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("dplyr", lib.loc="~/R/win-library/3.3")
library("readr", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
read_csv(url)
url <- "C:\Users\aet\Desktop\School\R projects\Journalism data\data\cpj.csv"
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
read_csv(url)
glimpse(journalist_data)
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -8:11)
glipse(journalist_data)
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -8:11)
glimpse(journalist_data)
glimpse(journalist_data)
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -(8:11))
glimpse(journalist_data)
unique(journalist_data$Type_death)
unique(journalist_data$Source_fire)
unique(journalist_data$Job)
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -(8:11))
glimpse(journalist_data)
unique(journalist_data$Job)
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("dplyr", lib.loc="~/R/win-library/3.3")
library("utils", lib.loc="C:/Program Files/R/R-3.3.1/library")
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -(8:11))
glimpse(journalist_data)
unique(journalist_data$Job)
library("readr", lib.loc="~/R/win-library/3.3")
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -(8:11))
glimpse(journalist_data)
unique(journalist_data$Job)
install.packages("maptools")
install.packages("rgeos")
install.packages("Cairo")
install.packages("ggmap")
install.packages("scales")
library(ggplot2)
library(dplyr)
library(readr)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
set.seed(8000)
# Database url
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
# Setting the working directory
setwd("/Users/aet/Desktop/School/R projects/Journalism data")
# Read map data
world.shp <- readShapeSpatial("world_map.shp")
names(world.shp)
library(ggplot2)
library(dplyr)
library(readr)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
set.seed(8000)
# Database url
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
# Setting the working directory
setwd("/Users/aet/Desktop/School/R projects/Journalism data/Journalism-Deaths-Visualization")
# Read map data
# Working with data
journalist_data <- read_csv(url)
glimpse(journalist_data)
journalist_data <- select(journalist_data, -1, -3, -6, -8, -10, -11, -12)
journalist_data <- select(journalist_data, -(8:11))
glimpse(journalist_data)
unique(journalist_data$Job)
library(ggplot2)
library(dplyr)
library(readr)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
set.seed(8000)
# Database url
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
# Setting the working directory
setwd("/Users/aet/Desktop/School/R projects/Journalism data/Journalism-Deaths-Visualization")
# Read map data
world.shp <- readShapeSpatial("/gadm28.shp/gadm28.shp")
names(world.shp)
library(ggplot2)
library(dplyr)
library(readr)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
set.seed(8000)
# Database url
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
# Setting the working directory
setwd("C:/Users/aet/Desktop/School/R projects/Journalism data/Journalism-Deaths-Visualization")
# Read map data
world.shp <- readShapeSpatial("/gadm28.shp/gadm28.shp")
names(world.shp)
library(ggplot2)
library(dplyr)
library(readr)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
set.seed(8000)
# Database url
url <- "C:/Users/aet/Desktop/School/R projects/Journalism data/data/cpj.csv"
# Setting the working directory
setwd("C:/Users/aet/Desktop/School/R projects/Journalism data/Journalism-Deaths-Visualization/gadm28.shp")
# Read map data
world.shp <- readShapeSpatial("gadm28.shp")
